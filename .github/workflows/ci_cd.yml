name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [review, delivery, order, seller, payment, notification, auth, user, email, orchestrator]    

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18.20.2
    - name: Install pnpm
      run: npm install -g pnpm@9.0.2
    - name: Install Dependencies
      run: pnpm install
    - name: Run Tests
      run: pnpm test
    - name: Build
      run: pnpm run build

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Install SonarCloud Scanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli-4.6.2.2472-linux.zip
        sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
        echo "SONAR_SCANNER_HOME=/opt/sonar-scanner" >> $GITHUB_ENV
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH
        echo "JAVA_HOME=${{ steps.setup-jdk.outputs.path }}" >> $GITHUB_ENV

    - name: Run SonarCloud Scanner
      env:
        JAVA_HOME: ${{ steps.setup-jdk.outputs.path }}
      run: sonar-scanner -Dsonar.projectKey=MenushaKatipearachchi_assessment2_devops -Dsonar.organization=menushakatipearachchi -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Build Docker image
      run: docker build --build-arg service=${{ matrix.service }} -t assessment2_devops-${{ matrix.service }}-service:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin    

    - name: Tag and push Docker image
      run: |
        docker tag assessment2_devops-${{ matrix.service }}-service:latest ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.service }}:tag
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.service }}:tag

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'
      
    - name: Set AKS Context
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f ./k8s
